# ==========================
# ===  General Settings  ===
# ==========================

### Global Options ###
set-option -g  default-terminal "screen-256color"   # default terminal for new windows; must be ‘screen’, ‘tmux’ or derivative
set-option -sa terminal-features[0]        ":RGB"   # add support for RGB-colour w/ SGR escape-sequences to 'xterm*' (index 0)
set-option -g  focus-events     on                  # pass-through requested focus-events to applications running inside tmux (e.g. autoread option in Vim)
set-option -g  mouse            on                  # captures & allows mouse events to be bound as key bindings
set-option -g  base-index       1                   # index to start searching for new windows
set-option -g  history-limit    20000               # maximum number of lines held in window history
set-option -g  display-time     1500                # time in ms status line messages are displayed
set-option -g  repeat-time      500                 # time in ms multiple commands can be entered w/o the prefix-key
set-option -sg escape-time      100                 # time in ms tmux waits after an escape is input
set-option -g  set-titles       on                  # sets client terminal title using 'tsl' & 'fsl' terminfo(5)
set-option -g  status           on                  # show status w/ height of 1 row (default); see own section
set-option -g  status-interval  10                  # time in sec that status line gets updated
# set-option -g  status-keys      vi                  # vi or emacs (default) style key bindings in the status line
# set-option -g  renumber-windows on                  # auto-renumber other windows in numerical order when a window closes

### Window Options ###
set-option -wg clock-mode-colour white              # use white color for clock
set-option -wg automatic-rename  off                # when 'on', sets window name using automatic-rename-format
# set-option -wg automatic-rename-format              # FORMAT used for automatic-rename when enabled



# ==========================
# ===    Key Bindings    ===
# ==========================

### Prefix Adjustment ###
set-option -g  prefix2     C-a  # use C-a as a secondary prefix
bind-key   C-a send-prefix -2   # sends secondary prefix to window

### Unbind Defaults ###
unbind-key "\$"    # rename-session
unbind-key ,       # rename-window
unbind-key "#"     # list-buffer
unbind-key =       # choose-buffer
unbind-key &       # kill-window
unbind-key %       # split-window -h
unbind-key '"'     # split-window
unbind-key [       # copy-mode
unbind-key ]       # paste-buffer
unbind-key n       # next-window
unbind-key p       # previous-window
unbind-key r       # refresh-client
unbind-key :       # command-prompt
unbind-key ';'     # last-pane
# unbind-key -a      # remove all key bindings

### Config Management ###
bind-key C-e new-window -n 'tmux.conf' \
    "sh -c '\${EDITOR:-nvim} ~/.tmux.conf && tmux source-file ~/.tmux.conf && tmux display \"Edited config reloaded\"'"  # Edit config & reload
bind-key C-r source-file ~/.tmux.conf \; display-message "Config reloaded"                                               # Reload tmux config

### Command Prompt & Status Line ###
bind-key -r C-s if-shell -F '#{s/off//:status}' \
    'set-option -g status off' 'set-option -g status on'    # Toggle status line on/off; TODO: understand how the -F conditional works
bind-key    ';' command-prompt -p '→'                       # Activate command-prompt using ';' instead of ':' just like in Neovim config 

### Session Management ###
bind-key S command-prompt -p "New session w/ name:"    "new-session -c $HOME -s '%%'"   # Create a new named session
bind-key R command-prompt -p "Rename current session:" "rename-session '%%'"            # Manually rename session

### Window Management ###
bind-key c new-window -c "#{pane_current_path}"                                     # Create new window w/ CWD of current pane
bind-key C new-window -c "#{pane_current_path}" -a                                  # Same as prefix-c, but new window will have index of (curr_win_index + 1)
bind-key n new-window -c "#{pane_current_path}" \; command-prompt -I "#{window_name}"\
    -p "New window w/ name:" "rename-window '%%'"                                   # Same as prefix-c, then immediately prompt for new name
bind-key X new-window -c "#{pane_current_path}" "/opt/homebrew/bin/xonsh"           # Same as prefix-c, but using the Xonsh shell
bind-key N move-window -r                                                           # Renumber windows starting w/ base-index
bind-key r command-prompt -I "#{window_name}"\
    -p "Rename current window:" "rename-window '%%'"                                # Manually rename window
bind-key % command-prompt -p "Swap w/ window:"         "swap-window -d -t '%%'"     # Swap 2 windows while keeping the current view
bind-key $ command-prompt -p "Move current window to:" "move-window -b -t '%%'"     # Move active window to new index
# TODO: when moving window to new index, conditionally apply -a/-b flag, based on whether the target index already exists
# bind-key    ^ command-prompt -p "Link window from (session:window):" \
#     "link-window -s %% -a"            # Link current window after destination-window
# TODO: find use cases for link-window; see https://samm81.github.io/tmux-link-window/
bind-key -r [ previous-window
bind-key -r ] next-window

### Copy Mode (see own section) ###
bind-key C-c copy-mode          # Enter copy mode
bind-key p   paste-buffer -p    # Insert contents of paste buffer into current pane
bind-key '"' choose-buffer -Z   # Interactively choose buffer from list
bind-key =   list-buffers       # List paste buffers



# ==========================
# ===     Copy Mode      ===
# ==========================

### Options ###
set-option -wg mode-keys vi     # Use vi style key bindings in copy mode

### Key (Un)Binds ###
unbind-key -T copy-mode-vi Space    # begin-selection
unbind-key -T copy-mode-vi v        # toggle-rectangle

bind-key -T copy-mode-vi v     send-keys -X begin-selection
bind-key -T copy-mode-vi y     send-keys -X copy-selection
bind-key -T copy-mode-vi Y     send-keys -X copy-line-and-cancel
bind-key -T copy-mode-vi Space send-keys -X rectangle-toggle



# ==========================
# ===  Theme Definition  ===
# ==========================

### Color Variables ###
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076"  # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white"      # 015

### Color Components ###
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour242"

### Special Symbols ###
separator_powerline_left=""
separator_powerline_right=""



# ==========================
# ===    Status Line     ===
# ==========================

### General Appearance ###
set-option -g mode-style          "fg=default,bg=$color_main"             # window modes style (copy, view, choose)
set-option -g status-position     top                                     # top or bottom (default)
set-option -g status-justify      left                                    # sets position of windows list in status line
set-option -g status-right-length 100                                     # max length of right component of status line (default: 40)
set-option -g message-style       "fg=$color_main,bg=$color_dark"         # command-prompt & status line message
set-option -g status-style        "fg=$color_status_text,bg=$color_dark"  # status line style

### Windows List ###
set-option -g  window-status-separator      ""                                      # separator b/w windows in status line; default is ' '
set-option -wg window-status-style          "fg=$color_status_text,bg=$color_dark"  # inactive windows status style
set-option -wg window-status-current-style  "fg=$color_light,bold,bg=$color_main"   # like window-status-style, but for active window
set-option -wg window-status-format         " #I:#W "                               # display format of windows on status line; #I=window_index, #W=window_name
set-option -wg window-status-current-format \
    "#[fg=$color_dark,bg=$color_main]$separator_powerline_right#[default] #I:#W ● #[fg=$color_main,bg=$color_dark]$separator_powerline_right#[default]"

### Status Widgets ###
widget_session="#[fg=$color_session_text] #S #[default]"
set-option -g status-left  "$widget_session"                        # display string to left of status line
widget_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
widget_user_host="#[fg=$color_secondary]#(whoami)#[default]@#h"     # #h=host_short (no domain)
set-option -g status-right "$widget_user_host • $widget_date"       # display string to the right of status line
# TODO: use sysctl to get system info & place into status-right



# ==========================
# ===  Nesting Sessions  ===
# ==========================

# Turn off all key-bindings & prefix handling on local session, so all keys are passed to inner/remote
# session. See - https://github.com/tmux/tmux/issues/237 (toggle on/off all keybindings #237)
# Also change status line/windows visual styles to indicate local Tmux handling has been disabled.

### Toggle Local Tmux Off ###
bind-key -T root S-F12 \
    set-option prefix None \;\
    set-option prefix2 None \;\
    set-option key-table off \;\
    set-option status-style                 "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set-option window-status-current-style  "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    set-option window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W ○ #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set-option -g window-status-style       "fg=$color_dark,bg=$color_window_off_status_bg" \;\
    if-shell   -F "#{pane_in_mode}" "send-keys -X cancel" \;\
    refresh-client -S

### Toggle Local Tmux On ###
bind-key -T off S-F12 \
    set-option -u prefix \;\
    set-option -u prefix2 \;\
    set-option -u key-table \;\
    set-option -u status-style \;\
    set-option -u window-status-current-style \;\
    set-option -u window-status-current-format \;\
    set-option -ug window-status-style \;\
    refresh-client -S
